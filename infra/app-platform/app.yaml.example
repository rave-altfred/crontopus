name: crontopus
region: fra1

# Custom Domains
domains:
  - domain: crontopus.com
    type: PRIMARY
  - domain: www.crontopus.com
    type: ALIAS

# VPC Configuration
# Replace with your VPC ID
vpc:
  id: YOUR_VPC_ID

# Database (using existing managed database)
# Note: DATABASE_URL set via environment variable below

# Backend API Service
services:
  - name: backend
    # Use pre-built image from Container Registry (faster deployments)
    image:
      registry_type: DOCR
      registry: crontopus-registry
      repository: backend
      tag: latest
    
    # HTTP Configuration
    http_port: 8000
    
    # Instance Configuration
    instance_count: 1
    instance_size_slug: apps-s-1vcpu-0.5gb  # $5/month - 512MB RAM, 50GB bandwidth
    
    # Health Check
    health_check:
      http_path: /health
      initial_delay_seconds: 20
      period_seconds: 10
      timeout_seconds: 10
      success_threshold: 1
      failure_threshold: 3
    
    # Environment Variables
    envs:
      # Database (existing managed database)
      - key: DATABASE_URL
        scope: RUN_TIME
        type: SECRET
        value: "postgresql://username:password@private-database-host:port/database?sslmode=require"
      
      # Security (generate a strong secret key)
      - key: SECRET_KEY
        scope: RUN_TIME
        type: SECRET
        value: "CHANGE_THIS_TO_A_STRONG_SECRET_KEY"
      
      - key: ALGORITHM
        scope: RUN_TIME
        value: "HS256"
      
      - key: ACCESS_TOKEN_EXPIRE_MINUTES
        scope: RUN_TIME
        value: "43200"
      
      # CORS
      - key: CORS_ORIGINS
        scope: RUN_TIME
        value: '["https://your-frontend-domain.com"]'
      
      # Application
      - key: DEBUG
        scope: RUN_TIME
        value: "false"
      
      - key: LOG_LEVEL
        scope: RUN_TIME
        value: "info"
    
    # Routes
    routes:
      - path: /

# Optional: Static Site for Frontend (Phase 5)
# static_sites:
#   - name: frontend
#     github:
#       repo: your-username/crontopus
#       branch: main
#       deploy_on_push: true
#     source_dir: frontend
#     build_command: npm run build
#     output_dir: dist
#     routes:
#       - path: /

# Workers (for background jobs, if needed later)
# workers:
#   - name: alert-worker
#     github:
#       repo: your-username/crontopus
#       branch: main
#     dockerfile_path: backend/Dockerfile
#     source_dir: /
#     instance_count: 1
#     instance_size_slug: basic-xxs
#     run_command: python -m crontopus_api.workers.alert_worker
